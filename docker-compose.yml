version: "3.7"
services:

  ##########################################
  ## DynDNS (ddclient)                    ##
  ## https://github.com/ddclient/ddclient ##
  ##########################################
  # Add compose.dyndns.yml to COMPOSE_FILE variable on .env file:
  # COMPOSE_FILE=docker-compose.yml:compose.dyndns.yml

  ############################
  ## Heimdall               ##
  ## https://heimdall.site/ ##
  ############################
  # Add compose.heimdall.yml to COMPOSE_FILE variable on .env file:
  # COMPOSE_FILE=docker-compose.yml:compose.heimdall.yml

  ##########################
  ## MariaDB              ##
  ## https://mariadb.org/ ##
  ##########################
  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: mariadb:latest # https://hub.docker.com/_/mariadb
    restart: always
    ports: 
      - 3306:3306
    volumes:
      - /docker/mariadb/var/lib/mysql:/var/lib/mysql
    # environment:
    #   MYSQL_ROOT_PASSWORD: XXXXXXXXXXXXXXXX
    networks:
      - CuponesFever_LAN

  #####################
  ## N8N             ##
  ## https://n8n.io/ ##
  #####################
  n8n:
    container_name: n8n
    hostname: n8n
    image: n8nio/n8n:latest # https://hub.docker.com/r/n8nio/n8n
    restart: unless-stopped
    ports: 
      - 5678:5678
    volumes:
      - /docker/n8n:/home/node/.n8n
    environment:
      GENERIC_TIMEZONE: Europe/Madrid
      TZ: Europe/Madrid
    networks:
      - DockerLAN

  ##############################################
  ## Nginx para renovar certificados por HTTP ##
  ## https://www.nginx.com/                   ##
  ##############################################
  nginx-cert:
    container_name: nginx-cert
    hostname: nginx-cert
    image: nginx:latest # https://hub.docker.com/_/nginx
    restart: unless-stopped
    ports: 
      - 80:80
    volumes:
      - /docker/nginx-cert/html:/usr/share/nginx/html:ro
    network_mode: "bridge"

  ####################################
  ## Nginx Proxy Manager            ##
  ## https://nginxproxymanager.com/ ##
  ####################################
  nginx-proxy-manager:
    container_name: Nginx-Proxy-Manager
    hostname: Nginx-Proxy-Manager
    image: jc21/nginx-proxy-manager:2 # https://hub.docker.com/r/jc21/nginx-proxy-manager
    restart: always
    ports: 
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - /docker/Nginx-Proxy-Manager/data:/data
      - /docker/Nginx-Proxy-Manager/letsencrypt:/etc/letsencrypt
      - /docker/Nginx-Proxy-Manager/app/config/production.json:/app/config/production.json
      ## Contenido del archivo production.json para usar SQLite:
      ## {
      ##   "database": {
      ##     "engine": "knex-native",
      ##     "knex": {
      ##       "client": "sqlite3",
      ##       "connection": {
      ##         "filename": "/data/database.sqlite"
      ##       }
      ##     }
      ##   }
      ## }
    networks:
      - DockerLAN

  ##########################
  ## Node-RED             ##
  ## https://nodered.org/ ##
  ##########################
  nodered:
    container_name: NodeRED
    hostname: NodeRED
    image: nodered/node-red:latest # https://hub.docker.com/r/nodered/node-red
    restart: unless-stopped
    user: root
    ports: 
      - 1880:1880
    volumes:
      - /docker/NodeRED/data:/data
    environment:
      TZ: Europe/Madrid
    networks:
      - DockerLAN

  #####################################################
  ## Plex & Plexdrive (Rapejim)                      ##
  ## https://www.plex.tv/                            ##
  ## https://github.com/rapejim/pms-plexdrive-docker ##
  #####################################################
  plex-cloud:
    container_name: PlexCloud
    hostname: PlexCloud
    image: rapejim/pms-plexdrive-docker:beta # https://hub.docker.com/r/rapejim/pms-plexdrive-docker
    restart: unless-stopped
    privileged: true
    ports: 
      - 32400:32400
    volumes:
      - /docker/PlexCloud/config:/config
      - /docker/PlexCloud/transcode:/transcode
    environment:
      TZ: Europe/Madrid
      PLEX_UID : ${UID:-1000}
      PLEX_GID : ${GID:-1000}
      PLEXDRIVE_MOUNT_POINT: /home/Plex/media
      CHANGE_CONFIG_DIR_OWNERSHIP: 'false'
      CHANGE_PLEXDRIVE_CONFIG_DIR_OWNERSHIP: 'true'
      # PLEX_CLAIM: XXXXXXXXXXXXXXXXXXXXXXXXXX
      EXTRA_PARAMS: --drive-id=0ACd3-O2oLDQUUk9PVA
    cap_add:
      - MKNOD
      - SYS_ADMIN
    devices:
      - "/dev/fuse"
    network_mode: "bridge"

  ##################################################
  ## RcloneBrowser (kapitainsky)                  ##
  ## https://kapitainsky.github.io/RcloneBrowser/ ##
  ##################################################
  rclone-browser:
    container_name: RcloneBrowser
    hostname: RcloneBrowser
    image: romancin/rclonebrowser:latest # https://hub.docker.com/r/romancin/rclonebrowser
    restart: unless-stopped
    ports: 
      - 5800:5800
    volumes:
      - /docker/RcloneBrowser/config:/config
      - /docker/RcloneBrowser/shared:/shared
      - /docker/RcloneBrowser/media:/media
      #   ## SSL de webmin ##
      # - /etc/webmin/letsencrypt-cert.pem:/config/certs/web-fullchain.pem
      # - /etc/webmin/letsencrypt-key.pem:/config/certs/web-privkey.pem
    environment:
      USER_ID: ${UID:-1000}
      GROUP_ID: ${GID:-1000}
      TZ: Europe/Madrid
      SECURE_CONNECTION: 1
      DISPLAY_WIDTH: 1280
      DISPLAY_HEIGHT: 720
    networks:
      - DockerLAN


###########
## REDES ##
###########
networks:
  DockerLAN:  ## Red bridge propia ##
    name: DockerLAN
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
